import numpy, sys, random, glob
import pygame as pg
import time

bpm = int(sys.argv[1])
num_player = int(sys.argv[2])

freq = 48000    # audio CD quality
bitsize = -16   # unsigned 16 bit
channels = 2    # 1 is mono, 2 is stereo
bfr = 2048   # number of samples (experiment to get right sound)
pg.mixer.init(freq, bitsize, channels, bfr)
pg.init()

types = ('calmsounds/*.wav', 'calmsounds/*.WAV') # the tuple of file types
files_grabbed = []
for files in types:
  files_grabbed.extend(glob.glob(files))

sounds = []
for file_grabbed in files_grabbed:
  sounds.append(pg.mixer.Sound(file_grabbed))

pg.mixer.set_num_channels(1000000)

cameo = [0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,6, 6,6,7,7,8,8,8,8, 9,9,9,9, 
0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,5, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,0,0,1,1,1, 2,2,2,3,3,3,4,4, 4,4,6,6,6,7,7,8, 8,8,8,9, 
9,9,9,12,12,12,12,12, 12,12,12,7,7,8,8,8, 8,9,9,9,9,0,0,1, 1,1,2,2, 
2,3,3,3,4,4,4,4, 12,12,12,12,7,7,8,8, 8,8,9,9,9,9,0,0, 0,0,0,0, 
12,12,12,12,12,12,12,12, 13,13,13,13,13,13,13,13, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,6,6,6,7,7, 8,8,8,8,9,9,9,9, 12,12,12,12,13,13,13,13, 13,13,13,13, 
12,12,12,12,13,13,13,13, 0,0,1,1,1,2,2,2, 12,12,12,12,13,13,13,13, 13,13,13,13, 
12,12,12,12,13,13,13,13, 0,0,1,1,1,2,2,2, 12,12,12,12,13,13,13,13, 13,13,13,13, 
12,12,12,12,13,13,13,13, 0,0,1,1,1,2,2,2, 12,12,12,12,13,13,13,13, 13,13,13,13]

alex = [0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,6, 6,6,7,7,8,8,8,8, 9,9,9,9, 
0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,6, 6,6,7,7,8,8,8,8, 9,9,9,9, 
9,9,9,6,6,6,7,7, 8,8,8,8,9,9,9,9, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,10,10,10,10,11, 10,10,10,10,10,10,10,10, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,6,6,6,7,7, 8,8,8,8,9,9,9,9, 10,10,10,10,0,0,0,0, 0,0,0,0, 
0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,6, 6,6,7,7,8,8,8,8, 9,9,9,9, 
10,10,10,10,10,10,10,10, 12,12,12,12,12,12,12,12, 0,0,1,1,1,2,2,2, 10,10,10,10, 
10,10,10,10,12,12,12,12, 12,12,12,12,0,0,1,1, 1,2,2,2,10,10,10,10, 10,10,10,10, 
12,12,12,12,12,12,12,12, 0,0,1,1,1,2,2,2, 10,10,10,10,12,12,12,12, 13,13,13,13, 
10,10,10,10,12,12,12,12, 13,13,13,13,0,0,1,1, 1,2,2,2,10,10,10,10, 12,12,12,12]

sierra = [0,0,5,5,5,5,5,5, 5,5,1,1,1,2,2,2, 3,3,3,4,4,4,4,6, 6,6,6,7, 
7,8,8,8,8,9,9,9, 9,9,9,9,9,9,9,9, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,0,0,1,1,1, 2,2,2,3,3,3,4,4, 4,4,6,6,6,7,7,8, 8,8,8,9, 
9,9,9,13,13,13,13,13, 0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,6, 6,6,7,7, 
8,8,8,8,9,9,9,9, 13,13,13,13,13,13,13,13, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,6,6,6,7,7, 8,8,8,8,9,9,9,9, 13,13,13,13,13,13,13,13, 14,14,14,14, 
14,14,14,14,14,14,14,14, 0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,6, 6,6,7,7, 
8,8,8,8,9,9,9,9, 13,13,13,13,13,13,13,13, 14,14,14,14,14,14,14,14, 14,14,14,14, 
10,10,10,10,10,10,10,10, 0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,6, 6,6,7,7, 
8,8,8,8,9,9,9,9, 13,13,13,13,13,13,13,13, 14,14,14,14,14,14,14,14, 14,14,14,14]

erica = [0,0,1,1,1,2,2,2, 3,3,3,4,4,4,4,4, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,6,6,6,7,7, 8,8,8,8,9,9,9,9, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,6,6,6,7,7, 8,8,8,8,9,9,9,9, 0,0,1,1,1,2,2,2, 3,3,3,4, 
4,4,4,14,14,14,14,14, 0,0,5,5,5,5,5,5, 5,5,5,5,5,5,5,6, 6,6,7,7, 
8,8,8,8,9,9,9,9, 0,0,1,1,1,2,2,2, 3,3,3,14,14,14,14,14, 14,14,14,14, 
14,14,14,14,10,10,10,10, 10,10,10,10,0,0,1,1, 1,2,2,2,3,3,3,4, 4,4,4,6, 
6,6,7,7,8,8,8,8, 9,9,9,9,14,14,14,14, 14,14,14,14,14,14,14,14, 10,10,10,10, 
10,10,10,10,5,5,5,5, 5,5,5,5,14,14,14,14, 10,10,10,10,13,13,13,13, 13,13,13,13, 
12,12,12,12,12,12,12,12, 5,5,5,5,5,5,5,5, 14,14,14,14,10,10,10,10, 13,13,13,13, 
13,13,13,13,12,12,12,12, 12,12,12,12,5,5,5,5, 5,5,5,5,14,14,14,14, 10,10,10,10]

sleep = 60.0 / bpm 
channel_num = 0
for i in range(len(erica)):
  for p in range(num_player):
    pg.mixer.Channel(channel_num).play(sounds[random.randint(0, 14)])
    channel_num += 1
    # pg.mixer.Channel(0).play(sounds[cameo[i]])
    # pg.mixer.Channel(1).play(sounds[alex[i]])
    # pg.mixer.Channel(2).play(sounds[sierra[i]])
    # pg.mixer.Channel(3).play(sounds[erica[i]])
  time.sleep(sleep)
